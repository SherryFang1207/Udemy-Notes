# 239-240. API and Endpoint, Path, Parameters
## What is API?
![image](https://user-images.githubusercontent.com/98670879/219975030-8ded9458-f910-47ec-aef7-c4737c55d812.png)<br>
![image](https://user-images.githubusercontent.com/98670879/219975113-2c03d2ce-e1aa-4af7-a7a0-b7045d69160e.png)<br>
API (Application Programming Interface), is the interface that external servers use to allow developer access their servers' data. <br>
Since developers are grabbing data from external servers, thus these external servers will define their API, which limits the accessable contents, way/destination to access (API urls).<br>
***API is NOT a Magic.*** API is simply a url as we are accessing and receiving data **through Internet.**   
Let's see how a API URL is made up by ***Endpoint, Path, and Parameters.***<br>
### Endpoint: the root of getting a message
The Endpoint is the url that can directly access the pure server without specifying anything.<br>
For example,   
```
URL: https://v2.jokeapi.dev/joke/
```
The above URL is the API Endpoint of Joke API. AS there is nothing after `joke/`, we don't specify anything to this endpoint. Every Server will have an Endpoint. (Well, at least an empty Menu in order to write something on it and serve, right?)<br>

### Path: the Pre-prepared Data to access by specifying what you need
Say I want Joke API to provide me with a `Programming` type of joke.<br>
```
URL: https://v2.jokeapi.dev/joke/Programming
```
By adding the `/Programming` path, I am specifying my request and thus can get responses that are pre-prepared under the `Programming jokes` category.<br>

###  Parameters: to Customize your request!
No one can develop a server that predicts and pre-prepare all the requested contents. For example, to search for jokes that contain keyword `python` and many other restrictions: <br>
```
URL: https://v2.jokeapi.dev/joke/Programming?blacklistFlags=nsfw,religious,sexist&format=txt&contains=python
```
After the `Endpoint` and `Path`, Parameters start with `?` sign and are <key=value1,value2...> pairs, which are connected by `&`. <br>



